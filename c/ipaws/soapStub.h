/* soapStub.h
   Generated by gSOAP 2.8.3 from IPAWS.h

Copyright(C) 2000-2011, Robert van Engelen, Genivia Inc. All Rights Reserved.
The generated code is released under one of the following licenses:
1) GPL or 2) Genivia's license for commercial use.
This program is released under the GPL with the additional exemption that
compiling, linking, and/or using OpenSSL is allowed.
*/

#ifndef soapStub_H
#define soapStub_H
#define SOAP_NAMESPACE_OF_ns2	"http://gov.fema.ipaws.services/caprequest"
#define SOAP_NAMESPACE_OF_ns3	"http://gov.fema.ipaws.services/capresponse"
#define SOAP_NAMESPACE_OF_ns4	"urn:oasis:names:tc:emergency:cap:1.2"
#define SOAP_NAMESPACE_OF_ns1	"http://gov.fema.ipaws.services/IPAWS_CAPService/"
#include "stdsoap2.h"
#ifdef __cplusplus
extern "C" {
#endif

/******************************************************************************\
 *                                                                            *
 * Enumerations                                                               *
 *                                                                            *
\******************************************************************************/


#ifndef SOAP_TYPE_wsu__tTimestampFault
#define SOAP_TYPE_wsu__tTimestampFault (7)
/* wsu:tTimestampFault */
enum wsu__tTimestampFault {wsu__MessageExpired = 0};
typedef enum wsu__tTimestampFault wsu__tTimestampFault;
#endif

#ifndef SOAP_TYPE_wsse__FaultcodeEnum
#define SOAP_TYPE_wsse__FaultcodeEnum (9)
/* wsse:FaultcodeEnum */
enum wsse__FaultcodeEnum {wsse__UnsupportedSecurityToken = 0, wsse__UnsupportedAlgorithm = 1, wsse__InvalidSecurity = 2, wsse__InvalidSecurityToken = 3, wsse__FailedAuthentication = 4, wsse__FailedCheck = 5, wsse__SecurityTokenUnavailable = 6};
typedef enum wsse__FaultcodeEnum wsse__FaultcodeEnum;
#endif

#ifndef SOAP_TYPE__ns4__alert_status
#define SOAP_TYPE__ns4__alert_status (104)
/* ns4:alert-status */
enum _ns4__alert_status {_ns4__alert_status__Actual = 0, _ns4__alert_status__Exercise = 1, _ns4__alert_status__System = 2, _ns4__alert_status__Test = 3, _ns4__alert_status__Draft = 4};
#endif

#ifndef SOAP_TYPE__ns4__alert_msgType
#define SOAP_TYPE__ns4__alert_msgType (105)
/* ns4:alert-msgType */
enum _ns4__alert_msgType {_ns4__alert_msgType__Alert = 0, _ns4__alert_msgType__Update = 1, _ns4__alert_msgType__Cancel = 2, _ns4__alert_msgType__Ack = 3, _ns4__alert_msgType__Error = 4};
#endif

#ifndef SOAP_TYPE__ns4__alert_scope
#define SOAP_TYPE__ns4__alert_scope (106)
/* ns4:alert-scope */
enum _ns4__alert_scope {_ns4__alert_scope__Public = 0, _ns4__alert_scope__Restricted = 1, _ns4__alert_scope__Private = 2};
#endif

#ifndef SOAP_TYPE__ns4__alert_info_category
#define SOAP_TYPE__ns4__alert_info_category (108)
/* ns4:alert-info-category */
enum _ns4__alert_info_category {_ns4__alert_info_category__Geo = 0, _ns4__alert_info_category__Met = 1, _ns4__alert_info_category__Safety = 2, _ns4__alert_info_category__Security = 3, _ns4__alert_info_category__Rescue = 4, _ns4__alert_info_category__Fire = 5, _ns4__alert_info_category__Health = 6, _ns4__alert_info_category__Env = 7, _ns4__alert_info_category__Transport = 8, _ns4__alert_info_category__Infra = 9, _ns4__alert_info_category__CBRNE = 10, _ns4__alert_info_category__Other = 11};
#endif

#ifndef SOAP_TYPE__ns4__alert_info_responseType
#define SOAP_TYPE__ns4__alert_info_responseType (110)
/* ns4:alert-info-responseType */
enum _ns4__alert_info_responseType {_ns4__alert_info_responseType__Shelter = 0, _ns4__alert_info_responseType__Evacuate = 1, _ns4__alert_info_responseType__Prepare = 2, _ns4__alert_info_responseType__Execute = 3, _ns4__alert_info_responseType__Avoid = 4, _ns4__alert_info_responseType__Monitor = 5, _ns4__alert_info_responseType__Assess = 6, _ns4__alert_info_responseType__AllClear = 7, _ns4__alert_info_responseType__None = 8};
#endif

#ifndef SOAP_TYPE__ns4__alert_info_urgency
#define SOAP_TYPE__ns4__alert_info_urgency (112)
/* ns4:alert-info-urgency */
enum _ns4__alert_info_urgency {_ns4__alert_info_urgency__Immediate = 0, _ns4__alert_info_urgency__Expected = 1, _ns4__alert_info_urgency__Future = 2, _ns4__alert_info_urgency__Past = 3, _ns4__alert_info_urgency__Unknown = 4};
#endif

#ifndef SOAP_TYPE__ns4__alert_info_severity
#define SOAP_TYPE__ns4__alert_info_severity (113)
/* ns4:alert-info-severity */
enum _ns4__alert_info_severity {_ns4__alert_info_severity__Extreme = 0, _ns4__alert_info_severity__Severe = 1, _ns4__alert_info_severity__Moderate = 2, _ns4__alert_info_severity__Minor = 3, _ns4__alert_info_severity__Unknown = 4};
#endif

#ifndef SOAP_TYPE__ns4__alert_info_certainty
#define SOAP_TYPE__ns4__alert_info_certainty (114)
/* ns4:alert-info-certainty */
enum _ns4__alert_info_certainty {_ns4__alert_info_certainty__Observed = 0, _ns4__alert_info_certainty__Likely = 1, _ns4__alert_info_certainty__Possible = 2, _ns4__alert_info_certainty__Unlikely = 3, _ns4__alert_info_certainty__Unknown = 4};
#endif

/******************************************************************************\
 *                                                                            *
 * Types with Custom Serializers                                              *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Classes and Structs                                                        *
 *                                                                            *
\******************************************************************************/


#if 0 /* volatile type: do not declare here, declared elsewhere */

#endif

#ifndef SOAP_TYPE__wsu__Timestamp
#define SOAP_TYPE__wsu__Timestamp (8)
/* wsu:Timestamp */
struct _wsu__Timestamp
{
	char *wsu__Id;	/* optional attribute of type xsd:string */
	char *Created;	/* optional element of type xsd:string */
	char *Expires;	/* optional element of type xsd:string */
};
typedef struct _wsu__Timestamp _wsu__Timestamp;
#endif

#ifndef SOAP_TYPE__wsse__UsernameToken
#define SOAP_TYPE__wsse__UsernameToken (10)
/* wsse:UsernameToken */
struct _wsse__UsernameToken
{
	char *Username;	/* optional element of type xsd:string */
	struct _wsse__Password *Password;	/* optional element of type wsse:Password */
	char *Nonce;	/* optional element of type xsd:string */
	char *wsu__Created;	/* optional element of type xsd:string */
	char *wsu__Id;	/* optional attribute of type xsd:string */
};
typedef struct _wsse__UsernameToken _wsse__UsernameToken;
#endif

#ifndef SOAP_TYPE__wsse__BinarySecurityToken
#define SOAP_TYPE__wsse__BinarySecurityToken (13)
/* Primitive wsse:BinarySecurityToken schema type: */
struct _wsse__BinarySecurityToken
{
	char *__item;
	char *wsu__Id;	/* optional attribute of type xsd:string */
	char *ValueType;	/* optional attribute of type xsd:string */
	char *EncodingType;	/* optional attribute of type xsd:string */
};
typedef struct _wsse__BinarySecurityToken _wsse__BinarySecurityToken;
#endif

#ifndef SOAP_TYPE__wsse__Reference
#define SOAP_TYPE__wsse__Reference (14)
/* wsse:Reference */
struct _wsse__Reference
{
	char *URI;	/* optional attribute of type xsd:string */
	char *ValueType;	/* optional attribute of type xsd:string */
};
typedef struct _wsse__Reference _wsse__Reference;
#endif

#ifndef SOAP_TYPE__wsse__Embedded
#define SOAP_TYPE__wsse__Embedded (15)
/* wsse:Embedded */
struct _wsse__Embedded
{
	char *wsu__Id;	/* optional attribute of type xsd:string */
	char *ValueType;	/* optional attribute of type xsd:string */
};
typedef struct _wsse__Embedded _wsse__Embedded;
#endif

#ifndef SOAP_TYPE__wsse__KeyIdentifier
#define SOAP_TYPE__wsse__KeyIdentifier (16)
/* Primitive wsse:KeyIdentifier schema type: */
struct _wsse__KeyIdentifier
{
	char *__item;
	char *wsu__Id;	/* optional attribute of type xsd:string */
	char *ValueType;	/* optional attribute of type xsd:string */
	char *EncodingType;	/* optional attribute of type xsd:string */
};
typedef struct _wsse__KeyIdentifier _wsse__KeyIdentifier;
#endif

#ifndef SOAP_TYPE__wsse__SecurityTokenReference
#define SOAP_TYPE__wsse__SecurityTokenReference (17)
/* wsse:SecurityTokenReference */
struct _wsse__SecurityTokenReference
{
	struct _wsse__Reference *Reference;	/* optional element of type wsse:Reference */
	struct _wsse__KeyIdentifier *KeyIdentifier;	/* optional element of type wsse:KeyIdentifier */
	struct _wsse__Embedded *Embedded;	/* optional element of type wsse:Embedded */
	char *wsu__Id;	/* optional attribute of type xsd:string */
	char *Usage;	/* optional attribute of type xsd:string */
};
typedef struct _wsse__SecurityTokenReference _wsse__SecurityTokenReference;
#endif

#ifndef SOAP_TYPE_ds__SignatureType
#define SOAP_TYPE_ds__SignatureType (21)
/* ds:SignatureType */
struct ds__SignatureType
{
	struct ds__SignedInfoType *SignedInfo;	/* optional element of type ds:SignedInfoType */
	char *SignatureValue;	/* optional element of type xsd:string */
	struct ds__KeyInfoType *KeyInfo;	/* optional element of type ds:KeyInfoType */
	char *Id;	/* optional attribute of type xsd:string */
};
typedef struct ds__SignatureType ds__SignatureType;
#endif

#ifndef SOAP_TYPE__c14n__InclusiveNamespaces
#define SOAP_TYPE__c14n__InclusiveNamespaces (31)
/* c14n:InclusiveNamespaces */
struct _c14n__InclusiveNamespaces
{
	char *PrefixList;	/* optional attribute of type xsd:string */
};
typedef struct _c14n__InclusiveNamespaces _c14n__InclusiveNamespaces;
#endif

#ifndef SOAP_TYPE_ds__TransformType
#define SOAP_TYPE_ds__TransformType (32)
/* ds:TransformType */
struct ds__TransformType
{
	struct _c14n__InclusiveNamespaces *c14n__InclusiveNamespaces;	/* optional element of type c14n:InclusiveNamespaces */
	char *__any;
	char *Algorithm;	/* optional attribute of type xsd:string */
};
typedef struct ds__TransformType ds__TransformType;
#endif

#ifndef SOAP_TYPE_ds__KeyInfoType
#define SOAP_TYPE_ds__KeyInfoType (24)
/* ds:KeyInfoType */
struct ds__KeyInfoType
{
	char *KeyName;	/* optional element of type xsd:string */
	struct ds__KeyValueType *KeyValue;	/* optional element of type ds:KeyValueType */
	struct ds__RetrievalMethodType *RetrievalMethod;	/* optional element of type ds:RetrievalMethodType */
	struct ds__X509DataType *X509Data;	/* optional element of type ds:X509DataType */
	struct _wsse__SecurityTokenReference *wsse__SecurityTokenReference;	/* optional element of type wsse:SecurityTokenReference */
	char *Id;	/* optional attribute of type xsd:string */
};
typedef struct ds__KeyInfoType ds__KeyInfoType;
#endif

#ifndef SOAP_TYPE_ds__SignedInfoType
#define SOAP_TYPE_ds__SignedInfoType (22)
/* ds:SignedInfoType */
struct ds__SignedInfoType
{
	struct ds__CanonicalizationMethodType *CanonicalizationMethod;	/* required element of type ds:CanonicalizationMethodType */
	struct ds__SignatureMethodType *SignatureMethod;	/* required element of type ds:SignatureMethodType */
	int __sizeReference;	/* sequence of elements <Reference> */
	struct ds__ReferenceType **Reference;	/* required element of type ds:ReferenceType */
	char *Id;	/* optional attribute of type xsd:string */
};
typedef struct ds__SignedInfoType ds__SignedInfoType;
#endif

#ifndef SOAP_TYPE_ds__CanonicalizationMethodType
#define SOAP_TYPE_ds__CanonicalizationMethodType (27)
/* ds:CanonicalizationMethodType */
struct ds__CanonicalizationMethodType
{
	char *Algorithm;	/* required attribute of type xsd:string */
	struct _c14n__InclusiveNamespaces *c14n__InclusiveNamespaces;	/* optional element of type c14n:InclusiveNamespaces */
};
typedef struct ds__CanonicalizationMethodType ds__CanonicalizationMethodType;
#endif

#ifndef SOAP_TYPE_ds__SignatureMethodType
#define SOAP_TYPE_ds__SignatureMethodType (28)
/* ds:SignatureMethodType */
struct ds__SignatureMethodType
{
	int *HMACOutputLength;	/* optional element of type xsd:int */
	char *Algorithm;	/* required attribute of type xsd:string */
};
typedef struct ds__SignatureMethodType ds__SignatureMethodType;
#endif

#ifndef SOAP_TYPE_ds__ReferenceType
#define SOAP_TYPE_ds__ReferenceType (29)
/* ds:ReferenceType */
struct ds__ReferenceType
{
	struct ds__TransformsType *Transforms;	/* optional element of type ds:TransformsType */
	struct ds__DigestMethodType *DigestMethod;	/* required element of type ds:DigestMethodType */
	char *DigestValue;	/* required element of type xsd:string */
	char *Id;	/* optional attribute of type xsd:string */
	char *URI;	/* optional attribute of type xsd:string */
	char *Type;	/* optional attribute of type xsd:string */
};
typedef struct ds__ReferenceType ds__ReferenceType;
#endif

#ifndef SOAP_TYPE_ds__TransformsType
#define SOAP_TYPE_ds__TransformsType (30)
/* ds:TransformsType */
struct ds__TransformsType
{
	int __sizeTransform;	/* sequence of elements <Transform> */
	struct ds__TransformType *Transform;	/* required element of type ds:TransformType */
};
typedef struct ds__TransformsType ds__TransformsType;
#endif

#ifndef SOAP_TYPE_ds__DigestMethodType
#define SOAP_TYPE_ds__DigestMethodType (35)
/* ds:DigestMethodType */
struct ds__DigestMethodType
{
	char *Algorithm;	/* required attribute of type xsd:string */
};
typedef struct ds__DigestMethodType ds__DigestMethodType;
#endif

#ifndef SOAP_TYPE_ds__KeyValueType
#define SOAP_TYPE_ds__KeyValueType (36)
/* ds:KeyValueType */
struct ds__KeyValueType
{
	struct ds__DSAKeyValueType *DSAKeyValue;	/* required element of type ds:DSAKeyValueType */
	struct ds__RSAKeyValueType *RSAKeyValue;	/* required element of type ds:RSAKeyValueType */
};
typedef struct ds__KeyValueType ds__KeyValueType;
#endif

#ifndef SOAP_TYPE_ds__RetrievalMethodType
#define SOAP_TYPE_ds__RetrievalMethodType (38)
/* ds:RetrievalMethodType */
struct ds__RetrievalMethodType
{
	struct ds__TransformsType *Transforms;	/* optional element of type ds:TransformsType */
	char *URI;	/* optional attribute of type xsd:string */
	char *Type;	/* optional attribute of type xsd:string */
};
typedef struct ds__RetrievalMethodType ds__RetrievalMethodType;
#endif

#ifndef SOAP_TYPE_ds__X509DataType
#define SOAP_TYPE_ds__X509DataType (40)
/* ds:X509DataType */
struct ds__X509DataType
{
	struct ds__X509IssuerSerialType *X509IssuerSerial;	/* required element of type ds:X509IssuerSerialType */
	char *X509SKI;	/* required element of type xsd:string */
	char *X509SubjectName;	/* required element of type xsd:string */
	char *X509Certificate;	/* required element of type xsd:string */
	char *X509CRL;	/* required element of type xsd:string */
};
typedef struct ds__X509DataType ds__X509DataType;
#endif

#ifndef SOAP_TYPE_ds__X509IssuerSerialType
#define SOAP_TYPE_ds__X509IssuerSerialType (44)
/* ds:X509IssuerSerialType */
struct ds__X509IssuerSerialType
{
	char *X509IssuerName;	/* required element of type xsd:string */
	int X509SerialNumber;	/* required element of type xsd:int */
};
typedef struct ds__X509IssuerSerialType ds__X509IssuerSerialType;
#endif

#ifndef SOAP_TYPE_ds__DSAKeyValueType
#define SOAP_TYPE_ds__DSAKeyValueType (45)
/* ds:DSAKeyValueType */
struct ds__DSAKeyValueType
{
	char *G;	/* optional element of type xsd:string */
	char *Y;	/* required element of type xsd:string */
	char *J;	/* optional element of type xsd:string */
	char *P;	/* required element of type xsd:string */
	char *Q;	/* required element of type xsd:string */
	char *Seed;	/* required element of type xsd:string */
	char *PgenCounter;	/* required element of type xsd:string */
};
typedef struct ds__DSAKeyValueType ds__DSAKeyValueType;
#endif

#ifndef SOAP_TYPE_ds__RSAKeyValueType
#define SOAP_TYPE_ds__RSAKeyValueType (46)
/* ds:RSAKeyValueType */
struct ds__RSAKeyValueType
{
	char *Modulus;	/* required element of type xsd:string */
	char *Exponent;	/* required element of type xsd:string */
};
typedef struct ds__RSAKeyValueType ds__RSAKeyValueType;
#endif

#ifndef SOAP_TYPE_xenc__EncryptionPropertyType
#define SOAP_TYPE_xenc__EncryptionPropertyType (68)
/* xenc:EncryptionPropertyType */
struct xenc__EncryptionPropertyType
{
	char *Target;	/* optional attribute of type xsd:string */
	char *Id;	/* optional attribute of type xsd:string */
};
typedef struct xenc__EncryptionPropertyType xenc__EncryptionPropertyType;
#endif

#ifndef SOAP_TYPE_xenc__EncryptedType
#define SOAP_TYPE_xenc__EncryptedType (58)
/* xenc:EncryptedType */
struct xenc__EncryptedType
{
	struct xenc__EncryptionMethodType *EncryptionMethod;	/* optional element of type xenc:EncryptionMethodType */
	struct ds__KeyInfoType *ds__KeyInfo;	/* optional element of type ds:KeyInfo */
	struct xenc__CipherDataType *CipherData;	/* required element of type xenc:CipherDataType */
	struct xenc__EncryptionPropertiesType *EncryptionProperties;	/* optional element of type xenc:EncryptionPropertiesType */
	char *Id;	/* optional attribute of type xsd:string */
	char *Type;	/* optional attribute of type xsd:string */
	char *MimeType;	/* optional attribute of type xsd:string */
	char *Encoding;	/* optional attribute of type xsd:string */
};
typedef struct xenc__EncryptedType xenc__EncryptedType;
#endif

#ifndef SOAP_TYPE_xenc__EncryptionMethodType
#define SOAP_TYPE_xenc__EncryptionMethodType (59)
/* xenc:EncryptionMethodType */
struct xenc__EncryptionMethodType
{
	int *KeySize;	/* optional element of type xsd:int */
	char *OAEPparams;	/* optional element of type xsd:string */
	char *Algorithm;	/* required attribute of type xsd:string */
	char *__mixed;
};
typedef struct xenc__EncryptionMethodType xenc__EncryptionMethodType;
#endif

#ifndef SOAP_TYPE_xenc__CipherDataType
#define SOAP_TYPE_xenc__CipherDataType (60)
/* xenc:CipherDataType */
struct xenc__CipherDataType
{
	char *CipherValue;	/* optional element of type xsd:string */
	struct xenc__CipherReferenceType *CipherReference;	/* optional element of type xenc:CipherReferenceType */
};
typedef struct xenc__CipherDataType xenc__CipherDataType;
#endif

#ifndef SOAP_TYPE_xenc__CipherReferenceType
#define SOAP_TYPE_xenc__CipherReferenceType (61)
/* xenc:CipherReferenceType */
struct xenc__CipherReferenceType
{
	struct xenc__TransformsType *Transforms;	/* optional element of type xenc:TransformsType */
	char *URI;	/* required attribute of type xsd:string */
};
typedef struct xenc__CipherReferenceType xenc__CipherReferenceType;
#endif

#ifndef SOAP_TYPE_xenc__TransformsType
#define SOAP_TYPE_xenc__TransformsType (62)
/* xenc:TransformsType */
struct xenc__TransformsType
{
	struct ds__TransformType ds__Transform;	/* required element of type ds:Transform */
};
typedef struct xenc__TransformsType xenc__TransformsType;
#endif

#ifndef SOAP_TYPE_xenc__AgreementMethodType
#define SOAP_TYPE_xenc__AgreementMethodType (65)
/* xenc:AgreementMethodType */
struct xenc__AgreementMethodType
{
	char *KA_Nonce;	/* optional element of type xsd:string */
	struct ds__KeyInfoType *OriginatorKeyInfo;	/* optional element of type ds:KeyInfoType */
	struct ds__KeyInfoType *RecipientKeyInfo;	/* optional element of type ds:KeyInfoType */
	char *Algorithm;	/* required attribute of type xsd:string */
	char *__mixed;
};
typedef struct xenc__AgreementMethodType xenc__AgreementMethodType;
#endif

#ifndef SOAP_TYPE_xenc__ReferenceType
#define SOAP_TYPE_xenc__ReferenceType (66)
/* xenc:ReferenceType */
struct xenc__ReferenceType
{
	char *URI;	/* required attribute of type xsd:string */
};
typedef struct xenc__ReferenceType xenc__ReferenceType;
#endif

#ifndef SOAP_TYPE_xenc__EncryptionPropertiesType
#define SOAP_TYPE_xenc__EncryptionPropertiesType (67)
/* xenc:EncryptionPropertiesType */
struct xenc__EncryptionPropertiesType
{
	int __sizeEncryptionProperty;	/* sequence of elements <EncryptionProperty> */
	struct xenc__EncryptionPropertyType *EncryptionProperty;	/* required element of type xenc:EncryptionPropertyType */
	char *Id;	/* optional attribute of type xsd:string */
};
typedef struct xenc__EncryptionPropertiesType xenc__EncryptionPropertiesType;
#endif

#ifndef SOAP_TYPE___xenc__union_ReferenceList
#define SOAP_TYPE___xenc__union_ReferenceList (77)
/* Operation wrapper: */
struct __xenc__union_ReferenceList
{
	struct xenc__ReferenceType *DataReference;	/* optional element of type xenc:ReferenceType */
	struct xenc__ReferenceType *KeyReference;	/* optional element of type xenc:ReferenceType */
};
#endif

#ifndef SOAP_TYPE__xenc__ReferenceList
#define SOAP_TYPE__xenc__ReferenceList (69)
/* xenc:ReferenceList */
struct _xenc__ReferenceList
{
	int __size_ReferenceList;	/* sequence of elements <-union-ReferenceList> */
	struct __xenc__union_ReferenceList *__union_ReferenceList;
};
typedef struct _xenc__ReferenceList _xenc__ReferenceList;
#endif

#ifndef SOAP_TYPE_xenc__EncryptedDataType
#define SOAP_TYPE_xenc__EncryptedDataType (63)
/* xenc:EncryptedDataType */
struct xenc__EncryptedDataType
{
	struct xenc__EncryptionMethodType *EncryptionMethod;	/* optional element of type xenc:EncryptionMethodType */
	struct ds__KeyInfoType *ds__KeyInfo;	/* optional element of type ds:KeyInfo */
	struct xenc__CipherDataType *CipherData;	/* required element of type xenc:CipherDataType */
	struct xenc__EncryptionPropertiesType *EncryptionProperties;	/* optional element of type xenc:EncryptionPropertiesType */
	char *Id;	/* optional attribute of type xsd:string */
	char *Type;	/* optional attribute of type xsd:string */
	char *MimeType;	/* optional attribute of type xsd:string */
	char *Encoding;	/* optional attribute of type xsd:string */
};
typedef struct xenc__EncryptedDataType xenc__EncryptedDataType;
#endif

#ifndef SOAP_TYPE_xenc__EncryptedKeyType
#define SOAP_TYPE_xenc__EncryptedKeyType (64)
/* xenc:EncryptedKeyType */
struct xenc__EncryptedKeyType
{
	struct xenc__EncryptionMethodType *EncryptionMethod;	/* optional element of type xenc:EncryptionMethodType */
	struct ds__KeyInfoType *ds__KeyInfo;	/* optional element of type ds:KeyInfo */
	struct xenc__CipherDataType *CipherData;	/* required element of type xenc:CipherDataType */
	struct xenc__EncryptionPropertiesType *EncryptionProperties;	/* optional element of type xenc:EncryptionPropertiesType */
	char *Id;	/* optional attribute of type xsd:string */
	char *Type;	/* optional attribute of type xsd:string */
	char *MimeType;	/* optional attribute of type xsd:string */
	char *Encoding;	/* optional attribute of type xsd:string */
	struct _xenc__ReferenceList *ReferenceList;	/* optional element of type xenc:ReferenceList */
	char *CarriedKeyName;	/* optional element of type xsd:string */
	char *Recipient;	/* optional attribute of type xsd:string */
};
typedef struct xenc__EncryptedKeyType xenc__EncryptedKeyType;
#endif

#ifndef SOAP_TYPE__wsse__Security
#define SOAP_TYPE__wsse__Security (81)
/* wsse:Security */
struct _wsse__Security
{
	struct _wsu__Timestamp *wsu__Timestamp;	/* optional element of type wsu:Timestamp */
	struct _wsse__UsernameToken *UsernameToken;	/* optional element of type wsse:UsernameToken */
	struct _wsse__BinarySecurityToken *BinarySecurityToken;	/* optional element of type wsse:BinarySecurityToken */
	struct xenc__EncryptedKeyType *xenc__EncryptedKey;	/* optional element of type xenc:EncryptedKeyType */
	struct _xenc__ReferenceList *xenc__ReferenceList;	/* optional element of type xenc:ReferenceList */
	struct ds__SignatureType *ds__Signature;	/* optional element of type ds:SignatureType */
	char *SOAP_ENV__actor;	/* optional attribute of type xsd:string */
	char *SOAP_ENV__role;	/* optional attribute of type xsd:string */
};
typedef struct _wsse__Security _wsse__Security;
#endif

#ifndef SOAP_TYPE__wsse__Password
#define SOAP_TYPE__wsse__Password (11)
/* Primitive wsse:Password schema type: */
struct _wsse__Password
{
	char *__item;
	char *Type;	/* optional attribute of type xsd:string */
};
typedef struct _wsse__Password _wsse__Password;
#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Header
#define SOAP_TYPE_SOAP_ENV__Header (87)
/* SOAP Header: */
struct SOAP_ENV__Header
{
	struct _wsse__Security *wsse__Security;	/* mustUnderstand */
	struct _ns1__CAPHeaderTypeDef *ns1__CAPHeaderTypeDef;	/* mustUnderstand */
};
#endif

#endif

#ifndef SOAP_TYPE_ns2__requestParameterList
#define SOAP_TYPE_ns2__requestParameterList (93)
/* ns2:requestParameterList */
struct ns2__requestParameterList
{
	char *requestAPI;	/* optional element of type xsd:string */
	char *requestOperation;	/* optional element of type xsd:string */
	int __sizeparameters;	/* sequence of elements <parameters> */
	struct ns2__parameterListItem *parameters;	/* optional element of type ns2:parameterListItem */
};
#endif

#ifndef SOAP_TYPE_ns2__parameterListItem
#define SOAP_TYPE_ns2__parameterListItem (94)
/* ns2:parameterListItem */
struct ns2__parameterListItem
{
	char *parameterName;	/* optional element of type xsd:string */
	char *comparisonOp;	/* optional element of type xsd:string */
	int __sizeparameterValue;	/* sequence of elements <parameterValue> */
	char **parameterValue;	/* optional element of type xsd:string */
	char *logicalOp;	/* optional element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_ns3__responseParameterList
#define SOAP_TYPE_ns3__responseParameterList (97)
/* ns3:responseParameterList */
struct ns3__responseParameterList
{
	int __sizeparameterListItem;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* sequence of elements <parameterListItem> */
	struct _ns3__parameterListItem *parameterListItem;	/* optional element of type ns3:parameterListItem */
	char *ResponseOperation;	/* optional element of type xsd:string */
	char *ResponseType;	/* optional element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_ns3__subParameterListItem
#define SOAP_TYPE_ns3__subParameterListItem (100)
/* ns3:subParameterListItem */
struct ns3__subParameterListItem
{
	char *subParameterName;	/* optional element of type xsd:string */
	char *subParameterValue;	/* optional element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE__ns3__parameterListItem
#define SOAP_TYPE__ns3__parameterListItem (98)
/* ns3:parameterListItem */
struct _ns3__parameterListItem
{
	char *parameterName;	/* optional element of type xsd:string */
	char *parameterValue;	/* optional element of type xsd:string */
	int __sizesubParaListItem;	/* sequence of elements <subParaListItem> */
	struct ns3__subParameterListItem *subParaListItem;	/* optional element of type ns3:subParameterListItem */
};
#endif

#ifndef SOAP_TYPE__ns4__alert_info_eventCode
#define SOAP_TYPE__ns4__alert_info_eventCode (115)
/* ns4:alert-info-eventCode */
struct _ns4__alert_info_eventCode
{
	char *valueName;	/* required element of type xsd:string */
	char *value;	/* required element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE__ns4__alert_info_parameter
#define SOAP_TYPE__ns4__alert_info_parameter (118)
/* ns4:alert-info-parameter */
struct _ns4__alert_info_parameter
{
	char *valueName;	/* required element of type xsd:string */
	char *value;	/* required element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE__ns4__alert_info_resource
#define SOAP_TYPE__ns4__alert_info_resource (120)
/* ns4:alert-info-resource */
struct _ns4__alert_info_resource
{
	char *resourceDesc;	/* required element of type xsd:string */
	char *mimeType;	/* required element of type xsd:string */
	char *size;	/* optional element of type xsd:integer */
	char *uri;	/* optional element of type xsd:anyURI */
	char *derefUri;	/* optional element of type xsd:string */
	char *digest;	/* optional element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE__ns4__alert_info_area_geocode
#define SOAP_TYPE__ns4__alert_info_area_geocode (123)
/* ns4:alert-info-area-geocode */
struct _ns4__alert_info_area_geocode
{
	char *valueName;	/* required element of type xsd:string */
	char *value;	/* required element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE__ns4__alert_info_area
#define SOAP_TYPE__ns4__alert_info_area (122)
/* ns4:alert-info-area */
struct _ns4__alert_info_area
{
	char *areaDesc;	/* required element of type xsd:string */
	int __sizepolygon;	/* sequence of elements <polygon> */
	char **polygon;	/* optional element of type xsd:string */
	int __sizecircle;	/* sequence of elements <circle> */
	char **circle;	/* optional element of type xsd:string */
	int __sizegeocode;	/* sequence of elements <geocode> */
	struct _ns4__alert_info_area_geocode *geocode;	/* optional element of type ns4:alert-info-area-geocode */
	char *altitude;	/* optional element of type xsd:decimal */
	char *ceiling;	/* optional element of type xsd:decimal */
};
#endif

#ifndef SOAP_TYPE__ns4__alert_info
#define SOAP_TYPE__ns4__alert_info (107)
/* ns4:alert-info */
struct _ns4__alert_info
{
	char *language;	/* optional element of type xsd:language */
	int __sizecategory;	/* sequence of elements <category> */
	enum _ns4__alert_info_category *category;	/* required element of type ns4:alert-info-category */
	char *event;	/* required element of type xsd:string */
	int __sizeresponseType;	/* sequence of elements <responseType> */
	enum _ns4__alert_info_responseType *responseType;	/* optional element of type ns4:alert-info-responseType */
	enum _ns4__alert_info_urgency urgency;	/* required element of type ns4:alert-info-urgency */
	enum _ns4__alert_info_severity severity;	/* required element of type ns4:alert-info-severity */
	enum _ns4__alert_info_certainty certainty;	/* required element of type ns4:alert-info-certainty */
	char *audience;	/* optional element of type xsd:string */
	int __sizeeventCode;	/* sequence of elements <eventCode> */
	struct _ns4__alert_info_eventCode *eventCode;	/* optional element of type ns4:alert-info-eventCode */
	time_t *effective;	/* optional element of type xsd:dateTime */
	time_t *onset;	/* optional element of type xsd:dateTime */
	time_t *expires;	/* optional element of type xsd:dateTime */
	char *senderName;	/* optional element of type xsd:string */
	char *headline;	/* optional element of type xsd:string */
	char *description;	/* optional element of type xsd:string */
	char *instruction;	/* optional element of type xsd:string */
	char *web;	/* optional element of type xsd:anyURI */
	char *contact;	/* optional element of type xsd:string */
	int __sizeparameter;	/* sequence of elements <parameter> */
	struct _ns4__alert_info_parameter *parameter;	/* optional element of type ns4:alert-info-parameter */
	int __sizeresource;	/* sequence of elements <resource> */
	struct _ns4__alert_info_resource *resource;	/* optional element of type ns4:alert-info-resource */
	int __sizearea;	/* sequence of elements <area> */
	struct _ns4__alert_info_area *area;	/* optional element of type ns4:alert-info-area */
};
#endif

#ifndef SOAP_TYPE__ns4__alert
#define SOAP_TYPE__ns4__alert (102)
/* ns4:alert */
struct _ns4__alert
{
	char *identifier;	/* required element of type xsd:string */
	char *sender;	/* required element of type xsd:string */
	time_t sent;	/* required element of type xsd:dateTime */
	enum _ns4__alert_status status;	/* required element of type ns4:alert-status */
	enum _ns4__alert_msgType msgType;	/* required element of type ns4:alert-msgType */
	char *source;	/* optional element of type xsd:string */
	enum _ns4__alert_scope scope;	/* required element of type ns4:alert-scope */
	char *restriction;	/* optional element of type xsd:string */
	char *addresses;	/* optional element of type xsd:string */
	int __sizecode;	/* sequence of elements <code> */
	char **code;	/* optional element of type xsd:string */
	char *note;	/* optional element of type xsd:string */
	char *references;	/* optional element of type xsd:string */
	char *incidents;	/* optional element of type xsd:string */
	int __sizeinfo;	/* sequence of elements <info> */
	struct _ns4__alert_info *info;	/* optional element of type ns4:alert-info */
	int __size;	/* sequence of elements <-any> */
	char **__any;
};
#endif

#ifndef SOAP_TYPE__ns1__postCAPRequestTypeDef
#define SOAP_TYPE__ns1__postCAPRequestTypeDef (128)
/* ns1:postCAPRequestTypeDef */
struct _ns1__postCAPRequestTypeDef
{
	struct _ns4__alert *ns4__alert;	/* required element of type ns4:alert */
};
#endif

#ifndef SOAP_TYPE__ns1__CAPServiceException
#define SOAP_TYPE__ns1__CAPServiceException (130)
/* ns1:CAPServiceException */
struct _ns1__CAPServiceException
{
	char *errorCode;	/* optional element of type xsd:string */
	char *message;	/* optional element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE__ns1__postCAPResponseTypeDef
#define SOAP_TYPE__ns1__postCAPResponseTypeDef (131)
/* ns1:postCAPResponseTypeDef */
struct _ns1__postCAPResponseTypeDef
{
	char *postCAPReturn;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE__ns1__messageResponseTypeDef
#define SOAP_TYPE__ns1__messageResponseTypeDef (132)
/* ns1:messageResponseTypeDef */
struct _ns1__messageResponseTypeDef
{
	int __sizealert;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* sequence of elements <ns4:alert> */
	struct _ns4__alert *ns4__alert;	/* optional element of type ns4:alert */
};
#endif

#ifndef SOAP_TYPE__ns1__CAPHeaderTypeDef
#define SOAP_TYPE__ns1__CAPHeaderTypeDef (133)
/* ns1:CAPHeaderTypeDef */
struct _ns1__CAPHeaderTypeDef
{
	char *logonUser;	/* optional element of type xsd:string */
	int *logonCogId;	/* optional element of type xsd:int */
};
#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Detail
#define SOAP_TYPE_SOAP_ENV__Detail (135)
/* SOAP-ENV:Detail */
struct SOAP_ENV__Detail
{
	char *__any;
	struct _ns1__CAPServiceException *ns1__CAPServiceException;	/* optional element of type ns1:CAPServiceException */
	int __type;	/* any type of element <fault> (defined below) */
	void *fault;	/* transient */
};
#endif

#endif

#ifndef SOAP_TYPE___ns1__getRequest
#define SOAP_TYPE___ns1__getRequest (142)
/* Operation wrapper: */
struct __ns1__getRequest
{
	struct ns2__requestParameterList *ns1__getRequestTypeDef;	/* optional element of type ns2:requestParameterList */
};
#endif

#ifndef SOAP_TYPE___ns1__postCAP
#define SOAP_TYPE___ns1__postCAP (146)
/* Operation wrapper: */
struct __ns1__postCAP
{
	struct _ns1__postCAPRequestTypeDef *ns1__postCAPRequestTypeDef;	/* optional element of type ns1:postCAPRequestTypeDef */
};
#endif

#ifndef SOAP_TYPE___ns1__getMessage
#define SOAP_TYPE___ns1__getMessage (149)
/* Operation wrapper: */
struct __ns1__getMessage
{
	struct ns2__requestParameterList *ns1__getMessageTypeDef;	/* optional element of type ns2:requestParameterList */
};
#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Code
#define SOAP_TYPE_SOAP_ENV__Code (150)
/* SOAP Fault Code: */
struct SOAP_ENV__Code
{
	char *SOAP_ENV__Value;	/* optional element of type xsd:QName */
	struct SOAP_ENV__Code *SOAP_ENV__Subcode;	/* optional element of type SOAP-ENV:Code */
};
#endif

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Reason
#define SOAP_TYPE_SOAP_ENV__Reason (152)
/* SOAP-ENV:Reason */
struct SOAP_ENV__Reason
{
	char *SOAP_ENV__Text;	/* optional element of type xsd:string */
};
#endif

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Fault
#define SOAP_TYPE_SOAP_ENV__Fault (153)
/* SOAP Fault: */
struct SOAP_ENV__Fault
{
	char *faultcode;	/* optional element of type xsd:QName */
	char *faultstring;	/* optional element of type xsd:string */
	char *faultactor;	/* optional element of type xsd:string */
	struct SOAP_ENV__Detail *detail;	/* optional element of type SOAP-ENV:Detail */
	struct SOAP_ENV__Code *SOAP_ENV__Code;	/* optional element of type SOAP-ENV:Code */
	struct SOAP_ENV__Reason *SOAP_ENV__Reason;	/* optional element of type SOAP-ENV:Reason */
	char *SOAP_ENV__Node;	/* optional element of type xsd:string */
	char *SOAP_ENV__Role;	/* optional element of type xsd:string */
	struct SOAP_ENV__Detail *SOAP_ENV__Detail;	/* optional element of type SOAP-ENV:Detail */
};
#endif

#endif

/******************************************************************************\
 *                                                                            *
 * Typedefs                                                                   *
 *                                                                            *
\******************************************************************************/

#ifndef SOAP_TYPE__QName
#define SOAP_TYPE__QName (5)
typedef char *_QName;
#endif

#ifndef SOAP_TYPE__XML
#define SOAP_TYPE__XML (6)
typedef char *_XML;
#endif

#ifndef SOAP_TYPE__ds__Signature
#define SOAP_TYPE__ds__Signature (26)
typedef struct ds__SignatureType _ds__Signature;
#endif

#ifndef SOAP_TYPE__ds__Transform
#define SOAP_TYPE__ds__Transform (34)
typedef struct ds__TransformType _ds__Transform;
#endif

#ifndef SOAP_TYPE__ds__KeyInfo
#define SOAP_TYPE__ds__KeyInfo (43)
typedef struct ds__KeyInfoType _ds__KeyInfo;
#endif

#ifndef SOAP_TYPE_xsd__anyURI
#define SOAP_TYPE_xsd__anyURI (89)
typedef char *xsd__anyURI;
#endif

#ifndef SOAP_TYPE_xsd__decimal
#define SOAP_TYPE_xsd__decimal (90)
typedef char *xsd__decimal;
#endif

#ifndef SOAP_TYPE_xsd__integer
#define SOAP_TYPE_xsd__integer (91)
typedef char *xsd__integer;
#endif

#ifndef SOAP_TYPE_xsd__language
#define SOAP_TYPE_xsd__language (92)
typedef char *xsd__language;
#endif


/******************************************************************************\
 *                                                                            *
 * Externals                                                                  *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Server-Side Operations                                                     *
 *                                                                            *
\******************************************************************************/


SOAP_FMAC5 int SOAP_FMAC6 __ns1__getRequest(struct soap*, struct ns2__requestParameterList *ns1__getRequestTypeDef, struct ns3__responseParameterList *ns1__getResponseTypeDef);

SOAP_FMAC5 int SOAP_FMAC6 __ns1__postCAP(struct soap*, struct _ns1__postCAPRequestTypeDef *ns1__postCAPRequestTypeDef, struct _ns1__postCAPResponseTypeDef *ns1__postCAPResponseTypeDef);

SOAP_FMAC5 int SOAP_FMAC6 __ns1__getMessage(struct soap*, struct ns2__requestParameterList *ns1__getMessageTypeDef, struct _ns1__messageResponseTypeDef *ns1__messageResponseTypeDef);

/******************************************************************************\
 *                                                                            *
 * Server-Side Skeletons to Invoke Service Operations                         *
 *                                                                            *
\******************************************************************************/

SOAP_FMAC5 int SOAP_FMAC6 soap_serve(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_request(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve___ns1__getRequest(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve___ns1__postCAP(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve___ns1__getMessage(struct soap*);

/******************************************************************************\
 *                                                                            *
 * Client-Side Call Stubs                                                     *
 *                                                                            *
\******************************************************************************/


SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__getRequest(struct soap *soap, const char *soap_endpoint, const char *soap_action, struct ns2__requestParameterList *ns1__getRequestTypeDef, struct ns3__responseParameterList *ns1__getResponseTypeDef);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__postCAP(struct soap *soap, const char *soap_endpoint, const char *soap_action, struct _ns1__postCAPRequestTypeDef *ns1__postCAPRequestTypeDef, struct _ns1__postCAPResponseTypeDef *ns1__postCAPResponseTypeDef);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__getMessage(struct soap *soap, const char *soap_endpoint, const char *soap_action, struct ns2__requestParameterList *ns1__getMessageTypeDef, struct _ns1__messageResponseTypeDef *ns1__messageResponseTypeDef);

#ifdef __cplusplus
}
#endif

#endif

/* End of soapStub.h */
