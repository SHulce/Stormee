/* IPAWS.h
   Generated by wsdl2h 2.8.3 from IPAWS.wsdl and typemap.dat
   2011-10-12 19:40:04 GMT

   DO NOT INCLUDE THIS FILE DIRECTLY INTO YOUR PROJECT BUILDS
   USE THE soapcpp2-GENERATED SOURCE CODE FILES FOR YOUR PROJECT BUILDS

   gSOAP XML Web services tools.
   Copyright (C) 2001-2010 Robert van Engelen, Genivia Inc. All Rights Reserved.
   Part of this software is released under one of the following licenses:
   GPL or Genivia's license for commercial use.
*/
#import "import/wsse.h"

/** @page page_notes Usage Notes

NOTE:

 - Run soapcpp2 on IPAWS.h to generate the SOAP/XML processing logic.
   Use soapcpp2 option -I to specify paths for #import
   To build with STL, 'stlvector.h' is imported from 'import' dir in package.
   Use soapcpp2 option -i to generate improved proxy and server classes.
 - Use wsdl2h options -c and -s to generate pure C code or C++ code without STL.
 - Use 'typemap.dat' to control namespace bindings and type mappings.
   It is strongly recommended to customize the names of the namespace prefixes
   generated by wsdl2h. To do so, modify the prefix bindings in the Namespaces
   section below and add the modified lines to 'typemap.dat' to rerun wsdl2h.
 - Use Doxygen (www.doxygen.org) on this file to generate documentation.
 - Use wsdl2h options -nname and -Nname to globally rename the prefix 'ns'.
 - Use wsdl2h option -d to enable DOM support for xsd:anyType.
 - Use wsdl2h option -g to auto-generate readers and writers for root elements.
 - Struct/class members serialized as XML attributes are annotated with a '@'.
 - Struct/class members that have a special role are annotated with a '$'.

WARNING:

   DO NOT INCLUDE THIS FILE DIRECTLY INTO YOUR PROJECT BUILDS.
   USE THE SOURCE CODE FILES GENERATED BY soapcpp2 FOR YOUR PROJECT BUILDS:
   THE soapStub.h FILE CONTAINS THIS CONTENT WITHOUT ANNOTATIONS.

LICENSE:

@verbatim
--------------------------------------------------------------------------------
gSOAP XML Web services tools
Copyright (C) 2000-2011, Robert van Engelen, Genivia Inc. All Rights Reserved.

This software is released under one of the following two licenses:
1) GPL or 2) Genivia's license for commercial use.
--------------------------------------------------------------------------------
1) GPL license.

This program is free software; you can redistribute it and/or modify it under
the terms of the GNU General Public License as published by the Free Software
Foundation; either version 2 of the License, or (at your option) any later
version.

This program is distributed in the hope that it will be useful, but WITHOUT ANY
WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A
PARTICULAR PURPOSE. See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with
this program; if not, write to the Free Software Foundation, Inc., 59 Temple
Place, Suite 330, Boston, MA 02111-1307 USA

Author contact information:
engelen@genivia.com / engelen@acm.org

This program is released under the GPL with the additional exemption that
compiling, linking, and/or using OpenSSL is allowed.
--------------------------------------------------------------------------------
2) A commercial-use license is available from Genivia, Inc., contact@genivia.com
--------------------------------------------------------------------------------
@endverbatim

*/


//gsoapopt cw

/******************************************************************************\
 *                                                                            *
 * Definitions                                                                *
 *   http://gov.fema.ipaws.services/IPAWS_CAPService/                         *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Import                                                                     *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Namespaces                                                          *
 *                                                                            *
\******************************************************************************/


/* NOTE:

It is strongly recommended to customize the names of the namespace prefixes
generated by wsdl2h. To do so, modify the prefix bindings below and add the
modified lines to typemap.dat to rerun wsdl2h:

ns1 = "http://gov.fema.ipaws.services/IPAWS_CAPService/"
ns2 = "http://gov.fema.ipaws.services/caprequest"
ns3 = "http://gov.fema.ipaws.services/capresponse"
ns4 = "urn:oasis:names:tc:emergency:cap:1.2"

*/

#define SOAP_NAMESPACE_OF_ns2	"http://gov.fema.ipaws.services/caprequest"
//gsoap ns2   schema namespace:	http://gov.fema.ipaws.services/caprequest
//gsoap ns2   schema elementForm:	qualified
//gsoap ns2   schema attributeForm:	unqualified

#define SOAP_NAMESPACE_OF_ns3	"http://gov.fema.ipaws.services/capresponse"
//gsoap ns3   schema namespace:	http://gov.fema.ipaws.services/capresponse
//gsoap ns3   schema elementForm:	qualified
//gsoap ns3   schema attributeForm:	unqualified

#define SOAP_NAMESPACE_OF_ns4	"urn:oasis:names:tc:emergency:cap:1.2"
//gsoap ns4   schema namespace:	urn:oasis:names:tc:emergency:cap:1.2
//gsoap ns4   schema elementForm:	qualified
//gsoap ns4   schema attributeForm:	unqualified

#define SOAP_NAMESPACE_OF_ns1	"http://gov.fema.ipaws.services/IPAWS_CAPService/"
//gsoap ns1   schema namespace:	http://gov.fema.ipaws.services/IPAWS_CAPService/
//gsoap ns1   schema elementForm:	qualified
//gsoap ns1   schema attributeForm:	unqualified

/******************************************************************************\
 *                                                                            *
 * Built-in Schema Types and Top-Level Elements and Attributes                *
 *                                                                            *
\******************************************************************************/


/// Primitive built-in type "xs:anyURI"
typedef char* xsd__anyURI;

/// Primitive built-in type "xs:decimal"
typedef char* xsd__decimal;

/// Primitive built-in type "xs:integer"
typedef char* xsd__integer;

/// Primitive built-in type "xs:language"
typedef char* xsd__language;


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://gov.fema.ipaws.services/caprequest                                *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://gov.fema.ipaws.services/capresponse                               *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   urn:oasis:names:tc:emergency:cap:1.2                                     *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://gov.fema.ipaws.services/IPAWS_CAPService/                         *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Complex Types and Top-Level Elements                                *
 *   http://gov.fema.ipaws.services/caprequest                                *
 *                                                                            *
\******************************************************************************/


/// "http://gov.fema.ipaws.services/caprequest":requestParameterList is a complexType.
struct ns2__requestParameterList
{
/// Element requestAPI of type xs:string.
    char*                                requestAPI                     0;	///< Optional element.
/// Element requestOperation of type xs:string.
    char*                                requestOperation               0;	///< Optional element.
/// Size of array of struct ns2__parameterListItem* is 0..unbounded
   $int                                  __sizeparameters               0;
/// Array struct ns2__parameterListItem* of length 0..unbounded
    struct ns2__parameterListItem*       parameters                     0;
};

/// "http://gov.fema.ipaws.services/caprequest":parameterListItem is a complexType.
struct ns2__parameterListItem
{
/// Element parameterName of type xs:string.
    char*                                parameterName                  0;	///< Optional element.
/// Element comparisonOp of type xs:string.
    char*                                comparisonOp                   0;	///< Optional element.
/// Size of array of char** is 0..unbounded
   $int                                  __sizeparameterValue           0;
/// Array char** of length 0..unbounded
    char**                               parameterValue                 0;
/// Element logicalOp of type xs:string.
    char*                                logicalOp                      0;	///< Optional element.
};

/******************************************************************************\
 *                                                                            *
 * Schema Complex Types and Top-Level Elements                                *
 *   http://gov.fema.ipaws.services/capresponse                               *
 *                                                                            *
\******************************************************************************/


/// "http://gov.fema.ipaws.services/capresponse":responseParameterList is a complexType.
struct ns3__responseParameterList
{
/// Size of the dynamic array of struct _ns3__parameterListItem* is 0..unbounded
   $int                                  __sizeparameterListItem        0;
/// Array struct _ns3__parameterListItem* of length 0..unbounded
    struct _ns3__parameterListItem*      parameterListItem              0;
/// Element ResponseOperation of type xs:string.
    char*                                ResponseOperation              0;	///< Optional element.
/// Element ResponseType of type xs:string.
    char*                                ResponseType                   0;	///< Optional element.
};

/// "http://gov.fema.ipaws.services/capresponse":subParameterListItem is a complexType.
struct ns3__subParameterListItem
{
/// Element subParameterName of type xs:string.
    char*                                subParameterName               0;	///< Optional element.
/// Element subParameterValue of type xs:string.
    char*                                subParameterValue              0;	///< Optional element.
};


/// Top-level root element "http://gov.fema.ipaws.services/capresponse":parameterListItem

/// "http://gov.fema.ipaws.services/capresponse":parameterListItem is a complexType.
struct _ns3__parameterListItem
{
/// Element parameterName of type xs:string.
    char*                                parameterName                  0;	///< Optional element.
/// Element parameterValue of type xs:string.
    char*                                parameterValue                 0;	///< Optional element.
/// Size of array of struct ns3__subParameterListItem* is 0..unbounded
   $int                                  __sizesubParaListItem          0;
/// Array struct ns3__subParameterListItem* of length 0..unbounded
    struct ns3__subParameterListItem*    subParaListItem                0;
};

/******************************************************************************\
 *                                                                            *
 * Schema Complex Types and Top-Level Elements                                *
 *   urn:oasis:names:tc:emergency:cap:1.2                                     *
 *                                                                            *
\******************************************************************************/



/// Top-level root element "urn:oasis:names:tc:emergency:cap:1.2":alert
/// @brief CAP Alert Message (version 1.2)

/// "urn:oasis:names:tc:emergency:cap:1.2":alert is a complexType.
struct _ns4__alert
{
/// Element identifier of type xs:string.
    char*                                identifier                     1;	///< Required element.
/// Element sender of type xs:string.
    char*                                sender                         1;	///< Required element.
/// Content pattern is "\\d\\d\\d\\d-\\d\\d-\\d\\dT\\d\\d:\\d\\d:\\d\\d[-,+]\\d\\d:\\d\\d" (note: not automatically enforced)
    time_t                                                             
                                         sent                           1;	///< Required element.
    enum _ns4__alert_status
    {
	_ns4__alert_status__Actual,	///< xs:string value="Actual"
	_ns4__alert_status__Exercise,	///< xs:string value="Exercise"
	_ns4__alert_status__System,	///< xs:string value="System"
	_ns4__alert_status__Test,	///< xs:string value="Test"
	_ns4__alert_status__Draft,	///< xs:string value="Draft"
    }
                                         status                         1;	///< Required element.
    enum _ns4__alert_msgType
    {
	_ns4__alert_msgType__Alert,	///< xs:string value="Alert"
	_ns4__alert_msgType__Update,	///< xs:string value="Update"
	_ns4__alert_msgType__Cancel,	///< xs:string value="Cancel"
	_ns4__alert_msgType__Ack,	///< xs:string value="Ack"
	_ns4__alert_msgType__Error,	///< xs:string value="Error"
    }
                                         msgType                        1;	///< Required element.
/// Element source of type xs:string.
    char*                                source                         0;	///< Optional element.
    enum _ns4__alert_scope
    {
	_ns4__alert_scope__Public,	///< xs:string value="Public"
	_ns4__alert_scope__Restricted,	///< xs:string value="Restricted"
	_ns4__alert_scope__Private,	///< xs:string value="Private"
    }
                                         scope                          1;	///< Required element.
/// Element restriction of type xs:string.
    char*                                restriction                    0;	///< Optional element.
/// Element addresses of type xs:string.
    char*                                addresses                      0;	///< Optional element.
/// Size of array of char** is 0..unbounded
   $int                                  __sizecode                     0;
/// Array char** of length 0..unbounded
    char**                               code                           0;
/// Element note of type xs:string.
    char*                                note                           0;	///< Optional element.
/// Element references of type xs:string.
    char*                                references                     0;	///< Optional element.
/// Element incidents of type xs:string.
    char*                                incidents                      0;	///< Optional element.
/// Size of info array is 0..unbounded
   $int                                  __sizeinfo                     0;
    struct _ns4__alert_info
    {
/// Element language of type xs:language.
    xsd__language                        language                       0;	///< Default value="en-US".
/// Size of category array is 1..unbounded
   $int                                  __sizecategory                 1;
    enum _ns4__alert_info_category
    {
	_ns4__alert_info_category__Geo,	///< xs:string value="Geo"
	_ns4__alert_info_category__Met,	///< xs:string value="Met"
	_ns4__alert_info_category__Safety,	///< xs:string value="Safety"
	_ns4__alert_info_category__Security,	///< xs:string value="Security"
	_ns4__alert_info_category__Rescue,	///< xs:string value="Rescue"
	_ns4__alert_info_category__Fire,	///< xs:string value="Fire"
	_ns4__alert_info_category__Health,	///< xs:string value="Health"
	_ns4__alert_info_category__Env,	///< xs:string value="Env"
	_ns4__alert_info_category__Transport,	///< xs:string value="Transport"
	_ns4__alert_info_category__Infra,	///< xs:string value="Infra"
	_ns4__alert_info_category__CBRNE,	///< xs:string value="CBRNE"
	_ns4__alert_info_category__Other,	///< xs:string value="Other"
    }
                                        *category                       1;
/// Element event of type xs:string.
    char*                                event                          1;	///< Required element.
/// Size of responseType array is 0..unbounded
   $int                                  __sizeresponseType             0;
    enum _ns4__alert_info_responseType
    {
	_ns4__alert_info_responseType__Shelter,	///< xs:string value="Shelter"
	_ns4__alert_info_responseType__Evacuate,	///< xs:string value="Evacuate"
	_ns4__alert_info_responseType__Prepare,	///< xs:string value="Prepare"
	_ns4__alert_info_responseType__Execute,	///< xs:string value="Execute"
	_ns4__alert_info_responseType__Avoid,	///< xs:string value="Avoid"
	_ns4__alert_info_responseType__Monitor,	///< xs:string value="Monitor"
	_ns4__alert_info_responseType__Assess,	///< xs:string value="Assess"
	_ns4__alert_info_responseType__AllClear,	///< xs:string value="AllClear"
	_ns4__alert_info_responseType__None,	///< xs:string value="None"
    }
                                        *responseType                   0;
    enum _ns4__alert_info_urgency
    {
	_ns4__alert_info_urgency__Immediate,	///< xs:string value="Immediate"
	_ns4__alert_info_urgency__Expected,	///< xs:string value="Expected"
	_ns4__alert_info_urgency__Future,	///< xs:string value="Future"
	_ns4__alert_info_urgency__Past,	///< xs:string value="Past"
	_ns4__alert_info_urgency__Unknown,	///< xs:string value="Unknown"
    }
                                         urgency                        1;	///< Required element.
    enum _ns4__alert_info_severity
    {
	_ns4__alert_info_severity__Extreme,	///< xs:string value="Extreme"
	_ns4__alert_info_severity__Severe,	///< xs:string value="Severe"
	_ns4__alert_info_severity__Moderate,	///< xs:string value="Moderate"
	_ns4__alert_info_severity__Minor,	///< xs:string value="Minor"
	_ns4__alert_info_severity__Unknown,	///< xs:string value="Unknown"
    }
                                         severity                       1;	///< Required element.
    enum _ns4__alert_info_certainty
    {
	_ns4__alert_info_certainty__Observed,	///< xs:string value="Observed"
	_ns4__alert_info_certainty__Likely,	///< xs:string value="Likely"
	_ns4__alert_info_certainty__Possible,	///< xs:string value="Possible"
	_ns4__alert_info_certainty__Unlikely,	///< xs:string value="Unlikely"
	_ns4__alert_info_certainty__Unknown,	///< xs:string value="Unknown"
    }
                                         certainty                      1;	///< Required element.
/// Element audience of type xs:string.
    char*                                audience                       0;	///< Optional element.
/// Size of eventCode array is 0..unbounded
   $int                                  __sizeeventCode                0;
    struct _ns4__alert_info_eventCode
    {
/// Element reference "urn:oasis:names:tc:emergency:cap:1.2":valueName.
    char*                                valueName                      1;	///< Required element.
/// Element reference "urn:oasis:names:tc:emergency:cap:1.2":value.
    char*                                value                          1;	///< Required element.
    }                                   *eventCode                      0;
/// Content pattern is "\\d\\d\\d\\d-\\d\\d-\\d\\dT\\d\\d:\\d\\d:\\d\\d[-,+]\\d\\d:\\d\\d" (note: not automatically enforced)
    time_t                                                             
                                        *effective                      0;	///< Optional element.
/// Content pattern is "\\d\\d\\d\\d-\\d\\d-\\d\\dT\\d\\d:\\d\\d:\\d\\d[-,+]\\d\\d:\\d\\d" (note: not automatically enforced)
    time_t                                                             
                                        *onset                          0;	///< Optional element.
/// Content pattern is "\\d\\d\\d\\d-\\d\\d-\\d\\dT\\d\\d:\\d\\d:\\d\\d[-,+]\\d\\d:\\d\\d" (note: not automatically enforced)
    time_t                                                             
                                        *expires                        0;	///< Optional element.
/// Element senderName of type xs:string.
    char*                                senderName                     0;	///< Optional element.
/// Element headline of type xs:string.
    char*                                headline                       0;	///< Optional element.
/// Element description of type xs:string.
    char*                                description                    0;	///< Optional element.
/// Element instruction of type xs:string.
    char*                                instruction                    0;	///< Optional element.
/// Element web of type xs:anyURI.
    xsd__anyURI                          web                            0;	///< Optional element.
/// Element contact of type xs:string.
    char*                                contact                        0;	///< Optional element.
/// Size of parameter array is 0..unbounded
   $int                                  __sizeparameter                0;
    struct _ns4__alert_info_parameter
    {
/// Element reference "urn:oasis:names:tc:emergency:cap:1.2":valueName.
    char*                                valueName                      1;	///< Required element.
/// Element reference "urn:oasis:names:tc:emergency:cap:1.2":value.
    char*                                value                          1;	///< Required element.
    }                                   *parameter                      0;
/// Size of resource array is 0..unbounded
   $int                                  __sizeresource                 0;
    struct _ns4__alert_info_resource
    {
/// Element resourceDesc of type xs:string.
    char*                                resourceDesc                   1;	///< Required element.
/// Element mimeType of type xs:string.
    char*                                mimeType                       1;	///< Required element.
/// Element size of type xs:integer.
    xsd__integer                         size                           0;	///< Optional element.
/// Element uri of type xs:anyURI.
    xsd__anyURI                          uri                            0;	///< Optional element.
/// Element derefUri of type xs:string.
    char*                                derefUri                       0;	///< Optional element.
/// Element digest of type xs:string.
    char*                                digest                         0;	///< Optional element.
    }                                   *resource                       0;
/// Size of area array is 0..unbounded
   $int                                  __sizearea                     0;
    struct _ns4__alert_info_area
    {
/// Element areaDesc of type xs:string.
    char*                                areaDesc                       1;	///< Required element.
/// Size of array of char** is 0..unbounded
   $int                                  __sizepolygon                  0;
/// Array char** of length 0..unbounded
    char**                               polygon                        0;
/// Size of array of char** is 0..unbounded
   $int                                  __sizecircle                   0;
/// Array char** of length 0..unbounded
    char**                               circle                         0;
/// Size of geocode array is 0..unbounded
   $int                                  __sizegeocode                  0;
    struct _ns4__alert_info_area_geocode
    {
/// Element reference "urn:oasis:names:tc:emergency:cap:1.2":valueName.
    char*                                valueName                      1;	///< Required element.
/// Element reference "urn:oasis:names:tc:emergency:cap:1.2":value.
    char*                                value                          1;	///< Required element.
    }                                   *geocode                        0;
/// Element altitude of type xs:decimal.
    xsd__decimal                         altitude                       0;	///< Optional element.
/// Element ceiling of type xs:decimal.
    xsd__decimal                         ceiling                        0;	///< Optional element.
    }                                   *area                           0;
    }                                   *info                           0;
/// TODO: <any namespace="http://www.w3.org/2000/09/xmldsig#" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
   $int                                  __size                        0;
    _XML                                *__any                         0;	///< Catch any element content in XML string.
};

/******************************************************************************\
 *                                                                            *
 * Schema Complex Types and Top-Level Elements                                *
 *   http://gov.fema.ipaws.services/IPAWS_CAPService/                         *
 *                                                                            *
\******************************************************************************/



/// Top-level root element "http://gov.fema.ipaws.services/IPAWS_CAPService/":postCAPRequestTypeDef

/// "http://gov.fema.ipaws.services/IPAWS_CAPService/":postCAPRequestTypeDef is a complexType.
struct _ns1__postCAPRequestTypeDef
{
/// @brief CAP Alert Message (version 1.2)
/// Element reference "urn:oasis:names:tc:emergency:cap:1.2":alert.
    struct _ns4__alert*                  ns4__alert                     1;	///< Required element.
};


/// Top-level root element "http://gov.fema.ipaws.services/IPAWS_CAPService/":CAPServiceException

/// "http://gov.fema.ipaws.services/IPAWS_CAPService/":CAPServiceException is a complexType.
struct _ns1__CAPServiceException
{
/// Element errorCode of type xs:string.
    char*                                errorCode                     ;	///< Nullable pointer.
/// Element message of type xs:string.
    char*                                message                       ;	///< Nullable pointer.
};


/// Top-level root element "http://gov.fema.ipaws.services/IPAWS_CAPService/":postCAPResponseTypeDef

/// "http://gov.fema.ipaws.services/IPAWS_CAPService/":postCAPResponseTypeDef is a complexType.
struct _ns1__postCAPResponseTypeDef
{
/// Element postCAPReturn of type xs:string.
    char*                                postCAPReturn                 ;	///< Nullable pointer.
};


/// Top-level root element "http://gov.fema.ipaws.services/IPAWS_CAPService/":messageResponseTypeDef

/// "http://gov.fema.ipaws.services/IPAWS_CAPService/":messageResponseTypeDef is a complexType.
struct _ns1__messageResponseTypeDef
{
/// @brief CAP Alert Message (version 1.2)
/// Size of the dynamic array of struct _ns4__alert* is 0..unbounded
   $int                                  __sizealert                    0;
/// Array struct _ns4__alert* of length 0..unbounded
    struct _ns4__alert*                  ns4__alert                     0;
};


/// Top-level root element "http://gov.fema.ipaws.services/IPAWS_CAPService/":CAPHeaderTypeDef

/// "http://gov.fema.ipaws.services/IPAWS_CAPService/":CAPHeaderTypeDef is a complexType.
struct _ns1__CAPHeaderTypeDef
{
/// Element logonUser of type xs:string.
    char*                                logonUser                      0;	///< Nullable pointer.
/// Element logonCogId of type xs:int.
    int*                                 logonCogId                     0;	///< Nullable pointer.
};

/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Elements                                              *
 *   http://gov.fema.ipaws.services/caprequest                                *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Attributes                                            *
 *   http://gov.fema.ipaws.services/caprequest                                *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Elements                                              *
 *   http://gov.fema.ipaws.services/capresponse                               *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Attributes                                            *
 *   http://gov.fema.ipaws.services/capresponse                               *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Elements                                              *
 *   urn:oasis:names:tc:emergency:cap:1.2                                     *
 *                                                                            *
\******************************************************************************/


/// Top-level root element "urn:oasis:names:tc:emergency:cap:1.2":valueName of type xs:string.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "urn:oasis:names:tc:emergency:cap:1.2":value of type xs:string.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Attributes                                            *
 *   urn:oasis:names:tc:emergency:cap:1.2                                     *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Elements                                              *
 *   http://gov.fema.ipaws.services/IPAWS_CAPService/                         *
 *                                                                            *
\******************************************************************************/


/// Top-level root element "http://gov.fema.ipaws.services/IPAWS_CAPService/":getRequestTypeDef of type "http://gov.fema.ipaws.services/caprequest":requestParameterList.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://gov.fema.ipaws.services/IPAWS_CAPService/":getResponseTypeDef of type "http://gov.fema.ipaws.services/capresponse":responseParameterList.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://gov.fema.ipaws.services/IPAWS_CAPService/":getMessageTypeDef of type "http://gov.fema.ipaws.services/caprequest":requestParameterList.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Attributes                                            *
 *   http://gov.fema.ipaws.services/IPAWS_CAPService/                         *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Services                                                                   *
 *                                                                            *
\******************************************************************************/


//gsoap ns1  service name:	CAPSoapHttp 
//gsoap ns1  service type:	CAPserviceInterface 
//gsoap ns1  service port:	http://vvsoua7.fematdl.net:8210/IPAWS_CAPService/IPAWS 
//gsoap ns1  service namespace:	http://gov.fema.ipaws.services/IPAWS_CAPService/ 
//gsoap ns1  service transport:	http://schemas.xmlsoap.org/soap/http 

/** @mainpage IPAWS_CAPService Definitions

@section IPAWS_USCORECAPService_bindings Service Bindings

  - @ref CAPSoapHttp

@section IPAWS_USCORECAPService_more More Information

  - @ref page_notes "Usage Notes"

  - @ref page_XMLDataBinding "XML Data Binding"

  - @ref SOAP_ENV__Header "SOAP Header Content" (when applicable)

  - @ref SOAP_ENV__Detail "SOAP Fault Detail Content" (when applicable)


*/

/**

@page CAPSoapHttp Binding "CAPSoapHttp"

@section CAPSoapHttp_operations Operations of Binding  "CAPSoapHttp"

  - @ref __ns1__getRequest

  - @ref __ns1__postCAP

  - @ref __ns1__getMessage

@section CAPSoapHttp_ports Endpoints of Binding  "CAPSoapHttp"

  - http://vvsoua7.fematdl.net:8210/IPAWS_CAPService/IPAWS

Note: use wsdl2h option -N to change the service binding prefix name

*/

/******************************************************************************\
 *                                                                            *
 * SOAP Header                                                                *
 *                                                                            *
\******************************************************************************/

/**

The SOAP Header is part of the gSOAP context and its content is accessed
through the soap.header variable. You may have to set the soap.actor variable
to serialize SOAP Headers with SOAP-ENV:actor or SOAP-ENV:role attributes.
Use option -j to remove entire SOAP Header definition.
Use option -k to remove the mustUnderstand qualifiers.

*/
struct SOAP_ENV__Header
{
    mustUnderstand                       // must be understood by receiver
/// "request_Header" SOAP Header part element
    struct _ns1__CAPHeaderTypeDef*       ns1__CAPHeaderTypeDef         ;

};

/******************************************************************************\
 *                                                                            *
 * SOAP Fault Detail                                                          *
 *                                                                            *
\******************************************************************************/

/**

The SOAP Fault is part of the gSOAP context and its content is accessed
through the soap.fault->detail variable (SOAP 1.1) or the
soap.fault->SOAP_ENV__Detail variable (SOAP 1.2).
Use option -j to omit.

*/
struct SOAP_ENV__Detail
{
// xsd:anyAttribute omitted: to parse attribute content of the Detail element into DOM anyAttribute, use wsdl2h option -d.
    _XML                                 __any                         ;	///< Catch any element content in XML string.
    struct _ns1__CAPServiceException*    ns1__CAPServiceException      ;
///< SOAP Fault element ""http://gov.fema.ipaws.services/IPAWS_CAPService/":CAPServiceException" part "CAPSoapException"
    int                                  __type                        ;	///< set to SOAP_TYPE_X for a serializable type X
    void                                *fault                         ;	///< points to serializable object X or NULL
};

/******************************************************************************\
 *                                                                            *
 * Service Binding                                                            *
 *   CAPSoapHttp                                                              *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__getRequest                                                        *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__getRequest" of service binding "CAPSoapHttp"

/**

Operation details:


  - SOAP document/literal style messaging

  - SOAP action="http://gov.fema.ipaws.services/IPAWS_CAPService/getRequest"

  - SOAP Fault: "http://gov.fema.ipaws.services/IPAWS_CAPService/":CAPServiceException (literal)

  - Request message has mandatory header part(s) (see @ref SOAP_ENV__Header):
    - ns1__CAPHeaderTypeDef

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__getRequest(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    struct ns2__requestParameterList*   ns1__getRequestTypeDef,
    // response parameters:
    struct ns3__responseParameterList*  ns1__getResponseTypeDef
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__getRequest(
    struct soap *soap,
    // request parameters:
    struct ns2__requestParameterList*   ns1__getRequestTypeDef,
    // response parameters:
    struct ns3__responseParameterList*  ns1__getResponseTypeDef
  );
@endcode

*/

//gsoap ns1  service method-style:	getRequest document
//gsoap ns1  service method-encoding:	getRequest literal
//gsoap ns1  service method-action:	getRequest http://gov.fema.ipaws.services/IPAWS_CAPService/getRequest
//gsoap ns1  service method-fault:	getRequest ns1__CAPServiceException
//gsoap ns1  service method-input-header-part:	getRequest ns1__CAPHeaderTypeDef
int __ns1__getRequest(
    struct ns2__requestParameterList*   ns1__getRequestTypeDef,	///< Request parameter
    struct ns3__responseParameterList*  ns1__getResponseTypeDef	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__postCAP                                                           *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__postCAP" of service binding "CAPSoapHttp"

/**

Operation details:


  - SOAP document/literal style messaging

  - SOAP action="http://gov.fema.ipaws.services/IPAWS_CAPService/postCAP"

  - SOAP Fault: "http://gov.fema.ipaws.services/IPAWS_CAPService/":CAPServiceException (literal)

  - Request message has mandatory header part(s) (see @ref SOAP_ENV__Header):
    - ns1__CAPHeaderTypeDef

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__postCAP(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    struct _ns1__postCAPRequestTypeDef* ns1__postCAPRequestTypeDef,
    // response parameters:
    struct _ns1__postCAPResponseTypeDef* ns1__postCAPResponseTypeDef
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__postCAP(
    struct soap *soap,
    // request parameters:
    struct _ns1__postCAPRequestTypeDef* ns1__postCAPRequestTypeDef,
    // response parameters:
    struct _ns1__postCAPResponseTypeDef* ns1__postCAPResponseTypeDef
  );
@endcode

*/

//gsoap ns1  service method-style:	postCAP document
//gsoap ns1  service method-encoding:	postCAP literal
//gsoap ns1  service method-action:	postCAP http://gov.fema.ipaws.services/IPAWS_CAPService/postCAP
//gsoap ns1  service method-fault:	postCAP ns1__CAPServiceException
//gsoap ns1  service method-input-header-part:	postCAP ns1__CAPHeaderTypeDef
int __ns1__postCAP(
    struct _ns1__postCAPRequestTypeDef* ns1__postCAPRequestTypeDef,	///< Request parameter
    struct _ns1__postCAPResponseTypeDef* ns1__postCAPResponseTypeDef	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__getMessage                                                        *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__getMessage" of service binding "CAPSoapHttp"

/**

Operation details:


  - SOAP document/literal style messaging

  - SOAP action="http://gov.fema.ipaws.services/IPAWS_CAPService/getMessage"

  - SOAP Fault: "http://gov.fema.ipaws.services/IPAWS_CAPService/":CAPServiceException (literal)

  - Request message has mandatory header part(s) (see @ref SOAP_ENV__Header):
    - ns1__CAPHeaderTypeDef

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__getMessage(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    struct ns2__requestParameterList*   ns1__getMessageTypeDef,
    // response parameters:
    struct _ns1__messageResponseTypeDef* ns1__messageResponseTypeDef
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__getMessage(
    struct soap *soap,
    // request parameters:
    struct ns2__requestParameterList*   ns1__getMessageTypeDef,
    // response parameters:
    struct _ns1__messageResponseTypeDef* ns1__messageResponseTypeDef
  );
@endcode

*/

//gsoap ns1  service method-style:	getMessage document
//gsoap ns1  service method-encoding:	getMessage literal
//gsoap ns1  service method-action:	getMessage http://gov.fema.ipaws.services/IPAWS_CAPService/getMessage
//gsoap ns1  service method-fault:	getMessage ns1__CAPServiceException
//gsoap ns1  service method-input-header-part:	getMessage ns1__CAPHeaderTypeDef
int __ns1__getMessage(
    struct ns2__requestParameterList*   ns1__getMessageTypeDef,	///< Request parameter
    struct _ns1__messageResponseTypeDef* ns1__messageResponseTypeDef	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * XML Data Binding                                                           *
 *                                                                            *
\******************************************************************************/


/**

@page page_XMLDataBinding XML Data Binding

SOAP/XML services use data bindings contractually bound by WSDL and auto-
generated by wsdl2h and soapcpp2 (see Service Bindings). Plain data bindings
are adopted from XML schemas as part of the WSDL types section or when running
wsdl2h on a set of schemas to produce non-SOAP-based XML data bindings.

The following readers and writers are C/C++ data type (de)serializers auto-
generated by wsdl2h and soapcpp2. Run soapcpp2 on this file to generate the
(de)serialization code, which is stored in soapC.c[pp]. Include "soapH.h" in
your code to import these data type and function declarations. Only use the
soapcpp2-generated files in your project build. Do not include the wsdl2h-
generated .h file in your code.

XML content can be retrieved from:
  - a file descriptor, using soap->recvfd = fd
  - a socket, using soap->socket = ...
  - a C++ stream, using soap->is = ...
  - a buffer, using the soap->frecv() callback

XML content can be stored to:
  - a file descriptor, using soap->sendfd = fd
  - a socket, using soap->socket = ...
  - a C++ stream, using soap->os = ...
  - a buffer, using the soap->fsend() callback


@section ns2 Top-level root elements of schema "http://gov.fema.ipaws.services/caprequest"

@section ns3 Top-level root elements of schema "http://gov.fema.ipaws.services/capresponse"

  - <ns3:parameterListItem> @ref _ns3__parameterListItem
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns3__parameterListItem(struct soap*, struct _ns3__parameterListItem*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns3__parameterListItem(struct soap*, struct _ns3__parameterListItem*);
    @endcode

@section ns4 Top-level root elements of schema "urn:oasis:names:tc:emergency:cap:1.2"

  - <ns4:alert> @ref _ns4__alert
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns4__alert(struct soap*, struct _ns4__alert*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns4__alert(struct soap*, struct _ns4__alert*);
    @endcode

  - <ns4:valueName> (use wsdl2h option -g to auto-generate)

  - <ns4:value> (use wsdl2h option -g to auto-generate)

@section ns1 Top-level root elements of schema "http://gov.fema.ipaws.services/IPAWS_CAPService/"

  - <ns1:getRequestTypeDef> (use wsdl2h option -g to auto-generate)

  - <ns1:getResponseTypeDef> (use wsdl2h option -g to auto-generate)

  - <ns1:getMessageTypeDef> (use wsdl2h option -g to auto-generate)

  - <ns1:postCAPRequestTypeDef> @ref _ns1__postCAPRequestTypeDef
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__postCAPRequestTypeDef(struct soap*, struct _ns1__postCAPRequestTypeDef*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__postCAPRequestTypeDef(struct soap*, struct _ns1__postCAPRequestTypeDef*);
    @endcode

  - <ns1:CAPServiceException> @ref _ns1__CAPServiceException
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__CAPServiceException(struct soap*, struct _ns1__CAPServiceException*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__CAPServiceException(struct soap*, struct _ns1__CAPServiceException*);
    @endcode

  - <ns1:postCAPResponseTypeDef> @ref _ns1__postCAPResponseTypeDef
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__postCAPResponseTypeDef(struct soap*, struct _ns1__postCAPResponseTypeDef*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__postCAPResponseTypeDef(struct soap*, struct _ns1__postCAPResponseTypeDef*);
    @endcode

  - <ns1:messageResponseTypeDef> @ref _ns1__messageResponseTypeDef
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__messageResponseTypeDef(struct soap*, struct _ns1__messageResponseTypeDef*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__messageResponseTypeDef(struct soap*, struct _ns1__messageResponseTypeDef*);
    @endcode

  - <ns1:CAPHeaderTypeDef> @ref _ns1__CAPHeaderTypeDef
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__CAPHeaderTypeDef(struct soap*, struct _ns1__CAPHeaderTypeDef*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__CAPHeaderTypeDef(struct soap*, struct _ns1__CAPHeaderTypeDef*);
    @endcode

*/

/* End of IPAWS.h */
